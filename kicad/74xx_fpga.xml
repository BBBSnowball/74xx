<!--
  Dummy FPGA description for 74xx logic

  (based on custom_sbloc.xml by Jason Luu, Jeff Goeders, Vaughn Betz)
-->
<architecture>
  <!-- 
       ODIN II specific config begins 
       Describes the types of user-specified netlist blocks (in blif, this corresponds to 
       ".model [type_of_block]") that this architecture supports.

       Note: Basic LUTs, I/Os, and flip-flops are not included here as there are 
       already special structures in blif (.names, .input, .output, and .latch) 
       that describe them.
  -->
  <models>
    <model name="\74AC04_6x1NOT">
      <input_ports>
        <port name="A" combinational_sink_ports="Y"/>
      </input_ports>
      <output_ports>
        <port name="Y"/>
      </output_ports>
    </model>
    <model name="\74AC32_4x1OR2">
      <input_ports>
        <port name="A" combinational_sink_ports="Y"/>
        <port name="B" combinational_sink_ports="Y"/>
      </input_ports>
      <output_ports>
        <port name="Y"/>
      </output_ports>
    </model>
    <model name="\74AC08_4x1AND2">
      <input_ports>
        <port name="A" combinational_sink_ports="Y"/>
        <port name="B" combinational_sink_ports="Y"/>
      </input_ports>
      <output_ports>
        <port name="Y"/>
      </output_ports>
    </model>
    <model name="\74AC00_4x1NAND2">
      <input_ports>
        <port name="A" combinational_sink_ports="Y"/>
        <port name="B" combinational_sink_ports="Y"/>
      </input_ports>
      <output_ports>
        <port name="Y"/>
      </output_ports>
    </model>
    <model name="\74AC10_3x1NAND3">
      <input_ports>
        <port name="A" combinational_sink_ports="Y"/>
        <port name="B" combinational_sink_ports="Y"/>
        <port name="C" combinational_sink_ports="Y"/>
      </input_ports>
      <output_ports>
        <port name="Y"/>
      </output_ports>
    </model>
    <model name="\74AC86_4x1XOR2">
      <input_ports>
        <port name="A" combinational_sink_ports="Y"/>
        <port name="B" combinational_sink_ports="Y"/>
      </input_ports>
      <output_ports>
        <port name="Y"/>
      </output_ports>
    </model>
    <model name="\74AC74_2x1DFFSR">
      <input_ports>
        <port name="C" combinational_sink_ports="Q"/>
        <port name="CLK" is_clock="1"/>
        <port name="D" clock="CLK"/>
        <port name="P" combinational_sink_ports="Q"/>
      </input_ports>
      <output_ports>
        <port name="Q" clock="CLK"/>
      </output_ports>
    </model>
  </models>
  <tiles>
    <tile name="io" area="0">
      <sub_tile name="io" capacity="8">
        <equivalent_sites>
          <site pb_type="io" pin_mapping="direct"/>
        </equivalent_sites>
        <input name="outpad" num_pins="1"/>
        <output name="inpad" num_pins="1"/>
        <clock name="clock" num_pins="1"/>
        <pinlocations pattern="custom">
          <loc side="left">io.outpad io.inpad io.clock</loc>
          <loc side="top">io.outpad io.inpad io.clock</loc>
          <loc side="right">io.outpad io.inpad io.clock</loc>
          <loc side="bottom">io.outpad io.inpad io.clock</loc>
        </pinlocations>
      </sub_tile>
      <switchblock_locations pattern="all" />
    </tile>
    <tile name="inpad" area="0">
      <sub_tile name="inpad" capacity="8">
        <equivalent_sites>
          <site pb_type="io_in" pin_mapping="direct"/>
        </equivalent_sites>
        <output name="inpad" num_pins="1"/>
        <pinlocations pattern="custom">
          <loc side="left">inpad.inpad</loc>
          <loc side="top">inpad.inpad</loc>
          <loc side="right">inpad.inpad</loc>
          <loc side="bottom">inpad.inpad</loc>
        </pinlocations>
      </sub_tile>
      <switchblock_locations pattern="all" />
    </tile>
    <tile name="outpad" area="0">
      <sub_tile name="outpad" capacity="8">
        <equivalent_sites>
          <site pb_type="io_out" pin_mapping="direct"/>
        </equivalent_sites>
        <input name="outpad" num_pins="1"/>
        <pinlocations pattern="custom">
          <loc side="left">outpad.outpad</loc>
          <loc side="top">outpad.outpad</loc>
          <loc side="right">outpad.outpad</loc>
          <loc side="bottom">outpad.outpad</loc>
        </pinlocations>
      </sub_tile>
      <switchblock_locations pattern="all" />
    </tile>
    <tile name="clb" area="53894">
      <sub_tile name="clb">
        <equivalent_sites>
          <site pb_type="clb" pin_mapping="direct"/>
        </equivalent_sites>
        <input name="I" num_pins="14" equivalent="none"/>
        <output name="O" num_pins="14" equivalent="none"/>
        <clock name="clk" num_pins="2"/>
        <pinlocations pattern="spread"/>
      </sub_tile>
      <switchblock_locations pattern="all" />
    </tile>
  </tiles>
  <!-- ODIN II specific config ends -->
  <!-- Physical descriptions begin -->
  <layout>
    <auto_layout>
      <!--Perimeter of 'io' blocks with 'EMPTY' blocks at corners-->
      <perimeter type="io" priority="100"/>
      <corners type="EMPTY" priority="101"/>
      <!--Fill with 'clb'-->
      <fill type="clb" priority="10"/>
    </auto_layout>
    <fixed_layout name="100" width="100" height="100">
      <perimeter type="io" priority="100"/>
      <corners type="EMPTY" priority="101"/>
      <fill type="clb" priority="10"/>
    </fixed_layout>
    <fixed_layout name="20" width="20" height="20">
      <perimeter type="io" priority="100"/>
      <corners type="EMPTY" priority="101"/>
      <fill type="clb" priority="10"/>
    </fixed_layout>
    <fixed_layout name="22" width="22" height="22">
      <perimeter type="io" priority="100"/>
      <corners type="EMPTY" priority="101"/>
      <fill type="clb" priority="10"/>
    </fixed_layout>
    <fixed_layout name="hans1" width="30" height="22">
      <!--
        see hans1-grid.png, disable View -> Dot for Dot
        (as described here: http://jubatian.com/articles/using-non-square-pixel-aspect-ratios-in-gimp/)
        (x/y resolution is set to 1/13 px/mm (for x) resp. 1/25 px/mm (for y))
      -->
      <row type="io" starty="0" priority="100"/>
      <row type="io" starty="21" priority="100"/>
      <fill type="clb" priority="10"/>
      <!-- 7: (30 - 14)/2 = 8 -->
      <!--
      <region type="EMPTY" startx="7" endx="13" starty="6" endy="6" priority="20"/>
      <region type="EMPTY" startx="11" endx="13" starty="7" endy="7" priority="20"/>
      <region type="EMPTY" startx="10" endx="12" starty="8" endy="8" priority="20"/>
      <region type="EMPTY" startx="9" endx="11" starty="9" endy="9" priority="20"/>
      <region type="EMPTY" startx="9" endx="10" starty="10" endy="10" priority="20"/>
      -->
      <region type="EMPTY" startx="7"  endx="13" starty="12" endy="12" priority="20"/>
      <region type="EMPTY" startx="11" endx="13" starty="11" endy="11" priority="20"/>
      <region type="EMPTY" startx="10" endx="12" starty="10" endy="10" priority="20"/>
      <region type="EMPTY" startx="9"  endx="11" starty="9"  endy="9" priority="20"/>
      <region type="EMPTY" startx="9"  endx="10" starty="8"  endy="8" priority="20"/>
      <!-- 0 -->
      <region type="EMPTY" startx="15" endx="20" starty="8" endy="12" priority="20"/>
      <!-- licenses, ... -->
      <region type="EMPTY" startx="23" endx="29" starty="0" endy="2" priority="30"/>
    </fixed_layout>
  </layout>
  <device> <!-- FIXME can we remove this? -->
    <!-- VB & JL: Using Ian Kuon's transistor sizing and drive strength data for routing, at 40 nm. Ian used BPTM 
			     models. We are modifying the delay values however, to include metal C and R, which allows more architecture
			     experimentation. We are also modifying the relative resistance of PMOS to be 1.8x that of NMOS
			     (vs. Ian's 3x) as 1.8x lines up with Jeff G's data from a 45 nm process (and is more typical of 
			     45 nm in general). I'm upping the Rmin_nmos from Ian's just over 6k to nearly 9k, and dropping 
			     RminW_pmos from 18k to 16k to hit this 1.8x ratio, while keeping the delays of buffers approximately
			     lined up with Stratix IV. 
			     We are using Jeff G.'s capacitance data for 45 nm (in tech/ptm_45nm).
			     Jeff's tables list C in for transistors with widths in multiples of the minimum feature size (45 nm).
			     The minimum contactable transistor is 2.5 * 45 nm, so I need to multiply drive strength sizes in this file
	                     by 2.5x when looking up in Jeff's tables.
			     The delay values are lined up with Stratix IV, which has an architecture similar to this
			     proposed FPGA, and which is also 40 nm 
			     C_ipin_cblock: input capacitance of a track buffer, which VPR assumes is a single-stage
			     4x minimum drive strength buffer. -->
    <sizing R_minW_nmos="8926" R_minW_pmos="16067"/>
    <!-- The grid_logic_tile_area below will be used for all blocks that do not explicitly set their own (non-routing)
     	  area; set to 0 since we explicitly set the area of all blocks currently in this architecture file.
	    -->
    <area grid_logic_tile_area="0"/>
    <chan_width_distr>
      <x distr="uniform" peak="1.000000"/>
      <y distr="uniform" peak="1.000000"/>
    </chan_width_distr>
    <!-- fs must be 3 -->
    <switch_block type="universal" fs="3"/>
    <connection_block input_switch_name="ipin_cblock"/>
    <default_fc in_type="frac" in_val="1" out_type="frac" out_val="1"/>
  </device>
  <switchlist>
    <!-- VB: the mux_trans_size and buf_size data below is in minimum width transistor *areas*, assuming the purple
           book area formula. This means the mux transistors are about 5x minimum drive strength.
           We assume the first stage of the buffer is 3x min drive strength to be reasonable given the large 
           mux transistors, and this gives a reasonable stage ratio of a bit over 5x to the second stage. We assume
           the n and p transistors in the first stage are equal-sized to lower the buffer trip point, since it's fed
           by a pass transistor mux. We can then reverse engineer the buffer second stage to hit the specified 
           buf_size (really buffer area) - 16.2x minimum drive nmos and 1.8*16.2 = 29.2x minimum drive.
           I then took the data from Jeff G.'s PTM modeling of 45 nm to get the Cin (gate of first stage) and Cout 
           (diff of second stage) listed below.  Jeff's models are in tech/ptm_45nm, and are in min feature multiples.
           The minimum contactable transistor is 2.5 * 45 nm, so I need to multiply the drive strength sizes above by 
           2.5x when looking up in Jeff's tables.
           Finally, we choose a switch delay (58 ps) that leads to length 4 wires having a delay equal to that of SIV of 126 ps.
           This also leads to the switch being 46% of the total wire delay, which is reasonable. -->
    <switch type="mux" name="0" R="551" Cin=".77e-15" Cout="4e-15" Tdel="58e-12" mux_trans_size="2.630740" buf_size="27.645901"/>
    <!--switch ipin_cblock resistance set to yeild for 4x minimum drive strength buffer-->
    <switch type="mux" name="ipin_cblock" R="2231.5" Cout="0." Cin="1.47e-15" Tdel="7.247000e-11" mux_trans_size="1.222260" buf_size="auto"/>

    <switch type="pass_gate" name="1" R="551" Cin=".77e-15" Cout="4e-15" Tdel="58e-12" />
  </switchlist>
  <segmentlist>
    <!--- VB & JL: using ITRS metal stack data, 96 nm half pitch wires, which are intermediate metal width/space.  
             With the 96 nm half pitch, such wires would take 60 um of height, vs. a 90 nm high (approximated as square) Stratix IV tile so this seems
             reasonable. Using a tile length of 90 nm, corresponding to the length of a Stratix IV tile if it were square. -->
    <!--
    <segment freq="1.000000" length="4" type="bidir" Rmetal="101" Cmetal="22.5e-15">
      <mux name="0"/>
      <sb type="pattern">1 1 1 1 1</sb>
      <cb type="pattern">1 1 1 1</cb>
    </segment>
    -->

    <segment freq="1.000000" length="longline" type="bidir" Rmetal="101" Cmetal="22.5e-15">
      <wire_switch name="1"/>
      <opin_switch name="0"/>
    </segment>
  </segmentlist>
  <complexblocklist>
    <!-- Define I/O pads begin -->
    <!-- Capacity is a unique property of I/Os, it is the maximum number of I/Os that can be placed at the same (X,Y) location on the FPGA -->
    <!-- Not sure of the area of an I/O (varies widely), and it's not relevant to the design of the FPGA core, so we're setting it to 0. -->
    <pb_type name="io">
      <input name="outpad" num_pins="1"/>
      <output name="inpad" num_pins="1"/>
      <clock name="clock" num_pins="1"/>
      <!-- IOs can operate as either inputs or outputs.
	     Maximum delays below come from Ian Kuon. They are small, so they should be interpreted as
	     the delays to and from registers in the I/O (and generally I/Os are registered 
	     today and that is when you timing analyze them.

		 Minimum delays are retrieved using a ratio of maximum and minimum times as seen in Quartus II
		 in Stratix IV. The ratio of minimum value/maximum value is as follows:
			inpad delay:  0.9239
			outpad delay: 0.9545

	     -->
      <mode name="inpad">
        <pb_type name="inpad" blif_model=".input" num_pb="1">
          <output name="inpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="inpad" input="inpad.inpad" output="io.inpad">
            <delay_constant max="4.243e-11" min="3.92e-11" in_port="inpad.inpad" out_port="io.inpad"/>
          </direct>
        </interconnect>
      </mode>
      <mode name="outpad">
        <pb_type name="outpad" blif_model=".output" num_pb="1">
          <input name="outpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="outpad" input="io.outpad" output="outpad.outpad">
            <delay_constant max="1.394e-11" min="1.331e-11" in_port="io.outpad" out_port="outpad.outpad"/>
          </direct>
        </interconnect>
      </mode>
      <mode name="inpad_clk">
        <pb_type name="inpad" blif_model=".input" num_pb="1">
          <output name="inpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="inpad" input="inpad.inpad" output="io.inpad">
            <delay_constant max="4.243e-11" min="3.92e-11" in_port="inpad.inpad" out_port="io.clock"/>
          </direct>
        </interconnect>
      </mode>
      <!-- Every input pin is driven by 15% of the tracks in a channel, every output pin is driven by 10% of the tracks in a channel -->
      <!-- IOs go on the periphery of the FPGA, for consistency, 
          make it physically equivalent on all sides so that only one definition of I/Os is needed.
          If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
        -->
      <!-- Place I/Os on the sides of the FPGA -->
      <power method="ignore"/>
    </pb_type>
    <pb_type name="io_in">
      <output name="inpad" num_pins="1"/>
      <mode name="inpad">
        <pb_type name="inpad" blif_model=".input" num_pb="1">
          <output name="inpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="inpad" input="inpad.inpad" output="io_in.inpad">
            <delay_constant max="4.243e-11" min="3.92e-11" in_port="inpad.inpad" out_port="io_in.inpad"/>
          </direct>
        </interconnect>
      </mode>
      <power method="ignore"/>
    </pb_type>
    <pb_type name="io_out">
      <input name="outpad" num_pins="1"/>
      <mode name="outpad2">
        <pb_type name="outpad" blif_model=".output" num_pb="1">
          <input name="outpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="outpad" input="io_out.outpad" output="outpad.outpad">
            <delay_constant max="1.394e-11" min="1.331e-11" in_port="io_out.outpad" out_port="outpad.outpad"/>
          </direct>
        </interconnect>
      </mode>
      <power method="ignore"/>
    </pb_type>
    <!-- Define I/O pads ends -->
    <!-- Define general purpose logic block (CLB) begin -->
    <!--- Area calculation: Total Stratix IV tile area is about 8100 um^2, and a minimum width transistor 
	   area is 60 L^2 yields a tile area of 84375 MWTAs.
	   Routing at W=300 is 30481 MWTAs, leaving us with a total of 53000 MWTAs for logic block area 
	   This means that only 37% of our area is in the general routing, and 63% is inside the logic
	   block. Note that the crossbar / local interconnect is considered part of the logic block
	   area in this analysis. That is a lower proportion of of routing area than most academics
	   assume, but note that the total routing area really includes the crossbar, which would push
	   routing area up significantly, we estimate into the ~70% range. 
	   -->
    <pb_type name="clb">
      <input name="I" num_pins="14" equivalent="none"/>
      <output name="O" num_pins="14" equivalent="none"/>
      <clock name="clk" num_pins="2"/>
      <mode name="74AC04_6x1NOT">
        <pb_type name="inv" blif_model=".subckt \74AC04_6x1NOT" num_pb="6">
          <input name="A" num_pins="1"/>
          <output name="Y" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="direct1" input="clb.I" output="inv.A"/>
          <complete name="direct2" input="inv.Y" output="clb.O"/>
        </interconnect>
      </mode>
      <mode name="74AC32_4x1OR2">
        <pb_type name="or2" blif_model=".subckt \74AC32_4x1OR2" num_pb="4">
          <input name="A" num_pins="1"/>
          <input name="B" num_pins="1"/>
          <output name="Y" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="direct1" input="clb.I" output="or2.A"/>
          <complete name="direct2" input="clb.I" output="or2.B"/>
          <complete name="direct3" input="or2.Y" output="clb.O"/>
        </interconnect>
      </mode>
      <mode name="74AC08_4x1AND2">
        <pb_type name="and2" blif_model=".subckt \74AC08_4x1AND2" num_pb="4">
          <input name="A" num_pins="1"/>
          <input name="B" num_pins="1"/>
          <output name="Y" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="direct1" input="clb.I" output="and2.A"/>
          <complete name="direct2" input="clb.I" output="and2.B"/>
          <complete name="direct3" input="and2.Y" output="clb.O"/>
        </interconnect>
      </mode>
      <mode name="74AC00_4x1NAND2">
        <pb_type name="nand2" blif_model=".subckt \74AC00_4x1NAND2" num_pb="4">
          <input name="A" num_pins="1"/>
          <input name="B" num_pins="1"/>
          <output name="Y" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="direct1" input="clb.I" output="nand2.A"/>
          <complete name="direct2" input="clb.I" output="nand2.B"/>
          <complete name="direct3" input="nand2.Y" output="clb.O"/>
        </interconnect>
      </mode>
      <mode name="74AC10_3x1NAND3">
        <pb_type name="nand3" blif_model=".subckt \74AC10_3x1NAND3" num_pb="3">
          <input name="A" num_pins="1"/>
          <input name="B" num_pins="1"/>
          <input name="C" num_pins="1"/>
          <output name="Y" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="direct1" input="clb.I" output="nand3.A"/>
          <complete name="direct2" input="clb.I" output="nand3.B"/>
          <complete name="direct3" input="clb.I" output="nand3.C"/>
          <complete name="direct4" input="nand3.Y" output="clb.O"/>
        </interconnect>
      </mode>
      <mode name="74AC86_4x1XOR2">
        <pb_type name="xor2" blif_model=".subckt \74AC86_4x1XOR2" num_pb="4">
          <input name="A" num_pins="1"/>
          <input name="B" num_pins="1"/>
          <output name="Y" num_pins="1"/>
        </pb_type>
        <interconnect>
          <complete name="direct1" input="clb.I" output="xor2.A"/>
          <complete name="direct2" input="clb.I" output="xor2.B"/>
          <complete name="direct3" input="xor2.Y" output="clb.O"/>
        </interconnect>
      </mode>
      <mode name="74AC74_2x1DFFSR">
        <pb_type name="dff" blif_model=".subckt \74AC74_2x1DFFSR" num_pb="2">
          <input name="C" num_pins="1"/>
          <input name="D" num_pins="1"/>
          <input name="P" num_pins="1"/>
          <output name="Q" num_pins="1"/>
          <clock name="CLK" num_pins="1" port_class="clock"/>
        </pb_type>
        <interconnect>
          <complete name="direct1" input="clb.I" output="dff.C"/>
          <complete name="direct2" input="clb.clk" output="dff.CLK"/>
          <complete name="direct3" input="clb.I" output="dff.D"/>
          <complete name="direct4" input="clb.I[7:6]" output="dff.P"/>
          <complete name="direct5" input="dff.Q" output="clb.O"/>
        </interconnect>
      </mode>
      <!-- keep one normal LUT as a fallback, for now -->
      <mode name="n1_lut6">
        <pb_type name="ble6" num_pb="1">
          <input name="in" num_pins="6"/>
          <output name="out" num_pins="1"/>
          <clock name="clk" num_pins="1"/>
          <pb_type name="lut6" blif_model=".names" num_pb="1" class="lut">
            <input name="in" num_pins="6" port_class="lut_in"/>
            <output name="out" num_pins="1" port_class="lut_out"/>
            <!-- LUT timing using delay matrix -->
            <delay_matrix type="max" in_port="lut6.in" out_port="lut6.out">
                261e-12
                261e-12
                261e-12
                261e-12
                261e-12
                261e-12
              </delay_matrix>
            <delay_matrix type="min" in_port="lut6.in" out_port="lut6.out">
                174e-12
                174e-12
                174e-12
                174e-12
                174e-12
                174e-12
              </delay_matrix>
          </pb_type>
          <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
            <input name="D" num_pins="1" port_class="D"/>
            <output name="Q" num_pins="1" port_class="Q"/>
            <clock name="clk" num_pins="1" port_class="clock"/>
            <T_setup value="66e-12" port="ff.D" clock="clk"/>
            <T_setup value="66e-12" port="ff.D" clock="clk"/>
            <T_hold value="37e-12" port="ff.D" clock="clk"/>
            <T_hold value="37e-12" port="ff.D" clock="clk"/>
            <T_clock_to_Q max="124e-12" min="60e-12" port="ff.Q" clock="clk"/>
          </pb_type>
          <interconnect>
            <direct name="direct1" input="ble6.in" output="lut6[0:0].in"/>
            <direct name="direct2" input="lut6.out" output="ff.D">
              <pack_pattern name="ble6" in_port="lut6.out" out_port="ff.D"/>
            </direct>
            <direct name="direct3" input="ble6.clk" output="ff.clk"/>
            <mux name="mux1" input="ff.Q lut6.out" output="ble6.out">
              <delay_constant max="25e-12" min="24e-12" in_port="lut6.out" out_port="ble6.out"/>
              <delay_constant max="45e-12" min="27e-12" in_port="ff.Q" out_port="ble6.out"/>
            </mux>
          </interconnect>
        </pb_type>
        <interconnect>
          <direct name="direct1" input="clb.I[5:0]" output="ble6.in"/>
          <direct name="direct2" input="ble6.out" output="clb.O[0:0]"/>
          <direct name="direct3" input="clb.I[6]" output="ble6.clk"/>
        </interconnect>
      </mode>
    </pb_type>
    <!-- Define general purpose logic block (CLB) ends -->
  </complexblocklist>
  <power>
    <local_interconnect C_wire="2.5e-10"/>
    <mux_transistor_size mux_transistor_size="3"/>
    <FF_size FF_size="4"/>
    <LUT_transistor_size LUT_transistor_size="4"/>
  </power>
  <clocks>
    <clock buffer_size="auto" C_wire="2.5e-10"/>
  </clocks>
</architecture>
